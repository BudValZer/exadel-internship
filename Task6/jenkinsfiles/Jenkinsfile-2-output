Started by user budvalzer
Obtained Jenkinsfile-2 from git https://github.com/BudValZer/task6_source.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/test
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/test/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/BudValZer/task6_source.git # timeout=10
Fetching upstream changes from https://github.com/BudValZer/task6_source.git
 > git --version # timeout=10
 > git --version # 'git version 2.30.2'
 > git fetch --tags --force --progress -- https://github.com/BudValZer/task6_source.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision c1a2174acd40a338fe81d78fcf47952fbed7c62f (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f c1a2174acd40a338fe81d78fcf47952fbed7c62f # timeout=10
Commit message: "Update Jenkinsfile-2"
 > git rev-list --no-walk 0a4457a7fbab6281f4bce41186d40d660bb79f18 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Agent Setup)
[Pipeline] isUnix
[Pipeline] readFile
[Pipeline] sh
+ docker build -t 78a8dbb4cb2a5dfdd65c72b54838bfb2c0fc04ab -f Dockerfile .
Sending build context to Docker daemon  154.6kB

Step 1/13 : FROM ubuntu:latest
 ---> 2b4cba85892a
Step 2/13 : LABEL Name="nginx" org.opencontainers.image.authors="BudValZer"
 ---> Using cache
 ---> 3f10244d7970
Step 3/13 : ENV DEVOPS="#"
 ---> Using cache
 ---> a75021f6fdd3
Step 4/13 : SHELL ["/bin/bash", "-c"]
 ---> Using cache
 ---> 1bb9c58b8cb8
Step 5/13 : RUN apt update &&     apt install nginx gettext-base -y &&     apt autoremove -y &&     apt clean -y &&     rm /var/www/html/* &&     rm /etc/nginx/sites-enabled/* &&     mkdir /docker-entrypoint.d
 ---> Using cache
 ---> ec6586b5c599
Step 6/13 : COPY docker-entrypoint.sh /
 ---> Using cache
 ---> a2ff16b4cece
Step 7/13 : COPY 20-envsubst-on-templates.sh /docker-entrypoint.d/
 ---> Using cache
 ---> cca24529f389
Step 8/13 : RUN chmod +x /docker-entrypoint.sh &&     chmod +x /docker-entrypoint.d/20-envsubst-on-templates.sh
 ---> Using cache
 ---> bccd5ac3d1c9
Step 9/13 : COPY index.html /var/www/html/
 ---> Using cache
 ---> ae44ff57593b
Step 10/13 : COPY default.conf.template /etc/nginx/templates/
 ---> Using cache
 ---> 2cb21bf09fcb
Step 11/13 : ENTRYPOINT ["/docker-entrypoint.sh"]
 ---> Using cache
 ---> b02471f1bec5
Step 12/13 : EXPOSE 80
 ---> Using cache
 ---> 27630c2f776d
Step 13/13 : CMD ["nginx", "-g", "daemon off;"]
 ---> Using cache
 ---> 12ea051f5530
Successfully built 12ea051f5530
Successfully tagged 78a8dbb4cb2a5dfdd65c72b54838bfb2c0fc04ab:latest
[Pipeline] }
[Pipeline] // stage
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . 78a8dbb4cb2a5dfdd65c72b54838bfb2c0fc04ab
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container ae2fd982a44cde4465a9bd318849fabcc497e636d0f6c4d01c201de6f385b1c8
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/test --volumes-from ae2fd982a44cde4465a9bd318849fabcc497e636d0f6c4d01c201de6f385b1c8 -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** 78a8dbb4cb2a5dfdd65c72b54838bfb2c0fc04ab cat
$ docker top 97cde009047b1fc071de269d64ff64572a5b0810984b133e46f11f6039fd98c8 -eo pid,comm
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Passing variable)
[Pipeline] withCredentials
Masking supported pattern matches of $PASSWORD
[Pipeline] {
[Pipeline] sh
+ export PASSWORD=****
+ export Not_Secret_PASSWORD=some_text
+ echo ****
****
+ echo some_text
some_text
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
$ docker stop --time=1 97cde009047b1fc071de269d64ff64572a5b0810984b133e46f11f6039fd98c8
$ docker rm -f 97cde009047b1fc071de269d64ff64572a5b0810984b133e46f11f6039fd98c8
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS